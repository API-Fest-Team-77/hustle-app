openapi: 3.0.0
info:
  version: "v1"
  title: "Hustle-API"
servers:
  - url: "localhost:3000"
    description: Test server
paths:
  /login:
    post:
      summary: "Returns details about a particular user"
      operationId: loginUser
      tags:
        - login
      requestBody:
        required: true
        description: user details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAuth"
      responses:
        "200":
          description: "Login is successful"
  /signup:
    post:
      summary: "Registers an user"
      operationId: UserSignup
      tags:
        - signup
      requestBody:
        required: true
        description: user details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSignup"

      responses:
        "201":
          description: "Signup is successful"
  /profile:
    get:
      summary: "returns the profile details of a user"
      operationId: UserProfile
      tags:
        - profile
      parameters:
        - $ref: "#/components/parameters/username"
      responses:
        "200":
          description: "profile details retrived"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    patch:
      summary: "update the profile details of a user"
      operationId: UserProfile
      tags:
        - profile
      parameters:
        - $ref: "#/components/parameters/username"
      responses:
        "201":
          description: "profile details updated"
  /posts:
    get:
      summary: "Return all the posts"
      description: "Return all the posts that are in our app"
      operationId: getPosts
      tags:
        - posts
      responses:
        "200":
          description: "An array of blog posts in JSON format"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/posts"
    post:
      summary: "create a post"
      operationId: createPost
      tags:
        - post
      requestBody:
        required: true
        description: post info
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/post"
      responses:
        "201":
          description: "Request is sucessful and a post created"
  /posts/{id}:
    get:
      summary: "Get a post"
      operationId: getPost
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "Returned a specific post by id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/post"

    patch:
      summary: "update a post"
      operationId: updatePost
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        required: true
        description: post info
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/post"
      responses:
        "201":
          description: "post details updated"
    delete:
      summary: "delete a post"
      operationId: deletePost
      tags:
        - post
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "post details deleted"
        "404":
          description: "post not found"
  /category:
    get:
      summary: "Get all categories"
      operationId: getCategories
      tags:
        - categories
      responses:
        "200":
          description: "categories retrived"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/categories"
components:
  parameters:
    username:
      name: username
      in: query
      description: username of the user
      required: true
      schema:
        type: string
    id:
      name: id
      in: path
      description: ID of the post
      required: true
      schema:
        type: string
    category:
      name: category
      in: path
      description: category of the post
      required: true
      schema:
        $ref: "#/components/schemas/category"
  schemas:
    session:
      type: object
      required:
        - logged_in
      properties:
        logged_in:
          type: boolean
          default: false
    UserAuth:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    UserSignup:
      type: object
      required:
        - username
        - password
        - email
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
    User:
      type: object
      required:
        - id
        - username
        - firstName
        - email
      properties:
        id:
          type: string
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        profilePictureURL:
          type: string
        location:
          type: string
        interests:
          description: array of interests of an user
          type: array
          items:
            $ref: "#/components/schemas/category"
        jobDescription:
          type: object
          $ref: "#/components/schemas/jobDescription"
    jobDescription:
      type: object
      description: job title and company name
      properties:
        jobTitle:
          type: string
        company:
          type: string
    category:
      type: string
    categories:
      type: array
      items:
        $ref: "#/components/schemas/category"
    post:
      type: object
      description: "post of an idea"
      required:
        - id
        - title
        - body
      properties:
        id:
          type: string
        title:
          type: string
        body:
          type: string
        interestCount:
          type: integer
        category:
          $ref: "#/components/schemas/category"
    posts:
      type: array
      description: "array of all posts"
      items:
        $ref: "#/components/schemas/post"
    postsByCategory:
      type: array
      description: "array of posts of same category"
      items:
        $ref: "#/components/schemas/post"